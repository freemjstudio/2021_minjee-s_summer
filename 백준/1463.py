# 1463 1로 만들기

n = int(input())
d = [0] * (n+1) # 이것이 DP의 가장 큰 특징 !! 메모이제이션이 이루어지는 배열이다. 이미 계산한 결과는 배열에 저장하여 중복 계산은 방지하는거지 !! 효율적임!!

for i in range(2, n+1): # 사실상 첫번째는 인덱스 0에 저장되겠지만 그렇게 하면 상당히 귀찮으니 일대일 대응할 수 있게끔 일부러 2 부터 n+1로 범위를 조정했
    d[i] = d[i-1] + 1 # 1을 빼고 시작하는 이유는 대체 뭐지 ? 3으로 나눠지거나 2로 나눠지거나 그렇게 되니까...
    if i%3 == 0:
        d[i] = min(d[i], d[i // 3] +1) # 1을 더하는 이유는 계산횟수가 1번 추가되기 때문이다. 또한 d 라는 배열에는 계산한 횟수가 값으로 저장된다 (문제에서 이걸 구하라고 그랫자나)
    if i%2 == 0:
        d[i] = min(d[i], d[i // 2] +1) # 파이썬은 참 좋은점이 min을 따로 구현하지 않아도 된다네 말그래도 최소값 비교해서 최소 계산 횟수 저장하기
print(d[n]) # 계산한 횟수 출력 ! 